---
import TableOfContentHeading from "./TableOfContentHeading.astro";
const { headings,screen = false } = Astro.props;
const toc = buildToc(headings);

function buildToc(headings) {
  const toc = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      if (heading.depth > 1 && heading.depth < 4) {
        parentHeadings.get(heading.depth - 1).subheadings.push(heading);
      }
    }
  });
  return toc;
}
---

{screen ? 
<nav class="toc hidden lg:block lg:sticky top-48 w-72 max-h-[60vh] ml-10 p-4 overflow-y-scroll">
  <h1 class="text-xl mb-4 font-bold text-black dark:text-white">On This Page</h1>
  <ul class="leading-3">
    {toc.map((heading) => <TableOfContentHeading heading={heading} />)}
  </ul>
</nav>
: 
<nav class="block lg:hidden">
  <h1 class="text-xl mb-4 font-bold text-black dark:text-white">On This Page</h1>
  <ul >
    {toc.map((heading) => <TableOfContentHeading heading={heading} />)}
  </ul>
</nav>}

<style>
.toc::-webkit-scrollbar {
  display: none;
}
.toc {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}
</style>

